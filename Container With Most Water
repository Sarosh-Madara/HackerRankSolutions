Question:

You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

Example1:
Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.

Example 2:

Input: height = [1,1]
Output: 1

Solution

class Solution {
    public int maxArea(int[] height) {
        int n = height.length;
        int ptr1 = 0;
        int ptr2 = n-1;
        int max_area = 0;
        boolean ptrSwitch = true;

        while(ptr1 < ptr2){

            int width = ptr2-ptr1;
            int vheight = Math.min(height[ptr1],height[ptr2]);
            int area = width * vheight;
            max_area = Math.max(max_area,area);
            if(height[ptr1] < height[ptr2])
            ptr1++;
            else 
            ptr2--;
        }

    
        
        return max_area;
    }
}
