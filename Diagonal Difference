import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'diagonalDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    public static int diagonalDifference(List<List<Integer>> arr) {
    // Write your code here
    int diagnolSum1 = 0;
        for (int i = 0; i < arr.size(); i++) {
            // for (int j = 0; j < arr.size(); j++) {
                 List<Integer> subArray = arr.get(i);
                 int v1 = subArray.get(i);
                 diagnolSum1 += v1;
                 
            // }
            // List<Integer> subArray = arr.get(0);
            // List<Integer> subArray2 = arr.get(1);
            // List<Integer> subArray3 = arr.get(2);
            // int v1 = subArray.get(0);
            // int v2 = subArray2.get(1);
            // int v3 = subArray3.get(2);
            // int diagnolSum1 = v1+v2+v3;
            
            
            // int v2d2 = subArray.get(2);
            // int v3d2 = subArray3.get(0);
            // int diagnolSum2 = v2d2 + v2 + v3d2;
            
            // return Math.abs(diagnolSum1 - diagnolSum2);
            
        }
        int reverse = 0;
        int diagnolSum2 = 0;
        for (int i = arr.size()-1; i>=0; i--) {
            List<Integer> subArray = arr.get(i);
            diagnolSum2 += subArray.get(reverse);
            reverse++;
        }
        
        return Math.abs(diagnolSum1 - diagnolSum2);
        
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, n).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        int result = Result.diagonalDifference(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
